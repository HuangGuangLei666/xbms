<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pl.mapper.TAccSmsaccountMapper" >
  <resultMap id="BaseResultMap" type="com.pl.model.TAccSmsaccount" >
    <id column="company_id" property="companyId" jdbcType="BIGINT" />
    <result column="balance" property="balance" jdbcType="INTEGER" />
    <result column="freeze" property="freeze" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="modify_date" property="modifyDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    company_id, balance, freeze, status, create_date, modify_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_acc_smsaccount
    where company_id = #{companyId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_acc_smsaccount
    where company_id = #{companyId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.pl.model.TAccSmsaccount" >
    insert into t_acc_smsaccount (company_id, balance, freeze, 
      status, create_date, modify_date
      )
    values (#{companyId,jdbcType=BIGINT}, #{balance,jdbcType=INTEGER}, #{freeze,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{modifyDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pl.model.TAccSmsaccount" >
    insert into t_acc_smsaccount
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="freeze != null" >
        freeze,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="modifyDate != null" >
        modify_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="companyId != null" >
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=INTEGER},
      </if>
      <if test="freeze != null" >
        #{freeze,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null" >
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pl.model.TAccSmsaccount" >
    update t_acc_smsaccount
    <set >
      <if test="balance != null" >
        balance = #{balance,jdbcType=INTEGER},
      </if>
      <if test="freeze != null" >
        freeze = #{freeze,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null" >
        modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pl.model.TAccSmsaccount" >
    update t_acc_smsaccount
    set balance = #{balance,jdbcType=INTEGER},
      freeze = #{freeze,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      modify_date = #{modifyDate,jdbcType=TIMESTAMP}
    where company_id = #{companyId,jdbcType=BIGINT}
  </update>
</mapper>