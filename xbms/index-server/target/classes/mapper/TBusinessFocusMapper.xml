<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pl.mapper.TBusinessFocusMapper">
    <resultMap id="BaseResultMap" type="com.pl.model.TBusinessFocus">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="company_id" property="companyId" jdbcType="BIGINT"/>
        <result column="business_id" property="businessId" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="create_by" property="createBy" jdbcType="VARCHAR"/>
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, company_id, business_id, name, create_by, create_date
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from t_business_focus
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_business_focus
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.pl.model.TBusinessFocus">
    insert into t_business_focus (id, company_id, business_id, 
      name, create_by, create_date
      )
    values (#{id,jdbcType=INTEGER}, #{companyId,jdbcType=BIGINT}, #{businessId,jdbcType=BIGINT}, 
      #{name,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.pl.model.TBusinessFocus">
        insert into t_business_focus
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="companyId != null">
                company_id,
            </if>
            <if test="businessId != null">
                business_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="companyId != null">
                #{companyId,jdbcType=BIGINT},
            </if>
            <if test="businessId != null">
                #{businessId,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.pl.model.TBusinessFocus">
        update t_business_focus
        <set>
            <if test="companyId != null">
                company_id = #{companyId,jdbcType=BIGINT},
            </if>
            <if test="businessId != null">
                business_id = #{businessId,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.pl.model.TBusinessFocus">
    update t_business_focus
    set company_id = #{companyId,jdbcType=BIGINT},
      business_id = #{businessId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <!--**************************** extend begin here start *******************************-->
    <select id="selectBusinessFocusDtoByName" resultType="com.pl.indexserver.model.BusinessFocusDto">
        select id, name from t_business_focus
        where company_id = #{companyId,jdbcType=BIGINT}
        <if test="businessId != null">
            and business_id = #{businessId,jdbcType=BIGINT}
        </if>
        and name like concat('%',#{name},'%')
        limit 5
    </select>

    <select id="selectBusinessFocusDtoByNames" resultType="com.pl.indexserver.model.BusinessFocusDto">
        select id, name from t_business_focus
        where company_id = #{companyId,jdbcType=BIGINT}
        and business_id = #{businessId,jdbcType=BIGINT}
        and name in
        <foreach collection="names" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>

    <select id="selectBusinessFocusNamesDtoByIds" resultType="java.lang.String">
        SELECT
            group_concat(NAME SEPARATOR '&amp;')
        FROM
            t_business_focus
        where company_id =  #{companyId,jdbcType=BIGINT}
        and business_id = #{businessId,jdbcType=BIGINT}
        and find_in_set(id, #{ids})
    </select>

    <select id="selectByCompanyIdAndBusinessId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_business_focus
        where company_id = #{companyId} and business_id = #{businessId}
    </select>
</mapper>